package za.co.swingy.view.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import za.co.swingy.controller.GameController;
import za.co.swingy.model.characters.Hero;
import za.co.swingy.view.MapView;

import javax.swing.*;
import java.awt.*;

import static java.lang.Math.pow;

public class MapGuiView extends FrameView implements MapView {
	private JPanel mainPanel;
	private JTextArea nameTextArea;
	private JTextArea classTextArea;
	private JTextArea levelTextArea;
	private JTextArea xpTextArea;
	private JTextArea hpTextArea;
	private JTextArea defTextArea;
	private JPanel mapPane;
	private JTextArea attTextArea;
	private JPanel movementPanel;
	private JTextArea Î»VTextArea;
	private JButton northButton;
	private JButton westButton;
	private JButton southButton;
	private JTextArea yourGoalIsToTextArea;
	private JPanel heroPanel;
	private JButton button1;
	private JButton button2;
	private JPanel ouputPanel;
	private JTextArea outputTextArea;

	public MapGuiView() {
//		this.initFrame();
	}

	public void displayMap(char[][] map, int mapSize) {

	}

	private void		setHero(Hero hero) {
		this.nameTextArea.setText(hero.getName());

		this.levelTextArea.setText("" + hero.getLevel());
		this.classTextArea.setText(hero.getClassType());

		if (hero.getEquippedHelm() == null) {
			this.hpTextArea.setText(hero.getHitPoints() + "/" + hero.getMaxHitPoints());
		} else {
			this.hpTextArea.setText((hero.getHitPoints() + hero.getEquippedHelm().getHitPointIncrease()) +
					"/" + (hero.getMaxHitPoints() + hero.getEquippedHelm().getHitPointIncrease()));
		}

		this.xpTextArea.setText(hero.getExperience() + "/" + (hero.getLevel() * 1000 -  ((int)pow(hero.getLevel() - 1, 2) * 450)));

		if (hero.getEquippedWeapon() == null) {
			this.attTextArea.setText("" + hero.getAttack());
		} else {
			this.attTextArea.setText("" + (hero.getAttack() + hero.getEquippedWeapon().getAttackIncrease()));
		}

		if (hero.getEquippedArmor() == null) {
			this.defTextArea.setText("" + hero.getDefence());
		} else {
			this.defTextArea.setText("" + (hero.getDefence() + hero.getEquippedArmor().getDefenceIncrease()));
		}
	}

	private void		setMap(GameController controller) {

	}

	public int display(GameController controller) {
		this.setHero(controller.getHero());
		this.setMap(controller);
		return 0;
	}

	public void death() {
	}

	public void runAway() {
	}

	public void success() {
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
		panel1.add(mainPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
	}
}
